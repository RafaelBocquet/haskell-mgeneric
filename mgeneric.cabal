name:                mgeneric
version:             0.0.0.1
license:             MIT
license-file:        LICENSE
author:              Rafaël Bocquet
maintainer:          Rafaël Bocquet <rafaelbocquet+github@gmail.com>
category:            Data
build-type:          Simple
cabal-version:       >=1.10
homepage:            http://github.com/RafaelBocquet/haskell-mgeneric/
bug-reports:         http://github.com/RafaelBocquet/haskell-mgeneric/issues
synopsis:            Generics with multiple parameters
description:         This package provides an implementation of generics with multiple parameters in Haskell, as described in http://dreixel.net/research/pdf/gpmp_colour.pdf.

                     
                     A MGeneric instance can be derived for most datatypes with ```deriveMGeneric ''Type```

                     
                     It also provides the type classes MFunctor, MFoldable and MTraversable, generalisations of Functor, Foldable and Traversable to kinds other than (* -> *), and the type class MZipWith.
extra-source-files:  README.md

                      
source-repository head
  type:     git
  location: git://github.com/RafaelBocquet/haskell-mgeneric.git
                     
library
  exposed-modules:     Data.MGeneric,
                       Data.MGeneric.TH,
                       Data.MGeneric.Instances,
                       Data.MFunctor,
                       Data.MFoldable,
                       Data.MTraversable,
                       Data.HList,
                       Data.Nat,
                       Data.HList.TH,
                       Data.Unapply,
                       Data.MZip
  build-depends:       base >=4.5 && <5,
                       template-haskell,
                       lens,
                       mtl,
                       containers
  other-extensions:    TemplateHaskell
  hs-source-dirs:      src
  default-language:    Haskell2010
